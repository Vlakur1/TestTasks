Приложение парсит сайт https://www.lesegais.ru/open-area/deal  и записывает данные в базу данных MSSQL.

Для запроса данных с сайта используется HttpClient

При первом запуске приложение пытается создать БД LesEgais на локальном MS SQL Server.

После запуска программа считывает данные с  сайта, и записывает данные в БД. Номер декларации считаем уникальным, и в случае если он повторяется - строка в базу не добавляется.

После выборки всех данных с сайта, программа ожидает 10 минут, после чего снова опрашивает все записи на сайте и добавляет только новые записи в БД.

Для выхода из программы на любом этапе необходимо нажать любую клавишу.

##########################################################################################
##########################################################################################

В связи с отсутвием точных требований к получаемым данным - использовали следующие предположения:

Считаем что номер декларации должен быть уникальным - использовал в качестве ключа - номер декларации.

>>> Для обеспечения стабильной и непрерывной работы парсера - определить (и обосновать) размер выборки и величину задержки между запросами.

С точки зрения скорости полной загрузки сайта - чем больше блок данных разово запрашиваемый с сайта - тем быстрее, но чем больше записей, тем дольше выполняется каждый запрос данных с сайта и запись блока в БД, 
а также выше потребление памяти ПК, если во время запроса или записи происходит непредвиденная ситуация, етсь вероятность, что весь блок данных не будет обработан.

Чем больше количество запросов, тем соответвенно выше накладные расходы: создание соединения с сайтом, создание соединения с БД.

5 000-20 000 записей за одну выборку достаточно быстро извлекается с сайта и записывается в БД, считаю наиболее оптимальным. 
Также в случае необходимости можно достаточно быстро выйти из программы, тк. корректный выход из программы возможен только в по окончании обработки блока данных.

>>>  Сохраняемые данные необходимо проверять - самостоятельно определить (и обосновать), какие данные и как валидировать.

Валидировал перед записью в БД поля:
ИНН  - должно состоять только из цифр, длина может быть только 10 или 12 символов, либо может отсутсвовать 
номер декларации - обязателен и может содержать только цыфры
дата - должна иметь формат  yyyy-MM-dd


>>>  Для каждой записи выполнять проверку наличия по ключу. Сохранять только новые записи. 
>>>  Учесть ситуацию, когда необходимо обновить данные (найдена более полная информация по сравнению с той, что уже имеется).

Предположим, что все последующие данные более новые чем предыдущие, и в случае повторения номера декларациии - просто целиком обновляем запись, 
если в новой записи какое то поле пустое, то его не перезаписываем.